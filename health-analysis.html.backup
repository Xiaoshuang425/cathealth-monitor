<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>健康分析 - CatHealth Monitor</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .analysis-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .upload-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .upload-area {
            border: 3px dashed #D4A574;
            border-radius: 12px;
            padding: 60px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(212, 165, 116, 0.05);
        }

        .upload-area:hover {
            background: rgba(212, 165, 116, 0.1);
            border-color: #B38A5C;
        }

        .upload-area.dragover {
            background: rgba(212, 165, 116, 0.2);
            border-color: #8B7355;
        }

        .upload-icon {
            font-size: 4rem;
            color: #D4A574;
            margin-bottom: 20px;
        }

        .file-input {
            display: none;
        }

        .preview-section {
            display: none;
            margin-top: 20px;
            text-align: center;
        }

        .image-preview {
            max-width: 400px;
            max-height: 300px;
            border-radius: 10px;
            margin: 0 auto 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .analyze-btn {
            background: #D4A574;
            color: white;
            border: none;
            padding: 15px 40px;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .analyze-btn:hover {
            background: #B38A5C;
        }

        .analyze-btn:disabled {
            background: #CCCCCC;
            cursor: not-allowed;
        }

        .result-section {
            display: none;
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-top: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .result-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid #F0E6D8;
        }

        .health-status {
            padding: 8px 20px;
            border-radius: 20px;
            font-weight: bold;
            font-size: 0.9rem;
        }

        .status-healthy {
            background: #E8F5E9;
            color: #2E7D32;
        }

        .status-warning {
            background: #FFF3E0;
            color: #EF6C00;
        }

        .status-critical {
            background: #FFEBEE;
            color: #C62828;
        }

        .status-unknown {
            background: #F5F5F5;
            color: #616161;
        }

        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .metric-card {
            background: #F8F4E9;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }

        .metric-value {
            font-size: 2rem;
            font-weight: bold;
            color: #5C4B37;
            margin: 10px 0;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }

        .feature-card {
            background: #F8F4E9;
            padding: 15px;
            border-radius: 8px;
            text-align: center;
        }

        .feature-label {
            font-size: 0.9rem;
            color: #8A7E6F;
            margin-bottom: 5px;
        }

        .feature-value {
            font-weight: bold;
            color: #5C4B37;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 40px;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #D4A574;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .detection-info {
            background: #E3F2FD;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }

        .ai-badge {
            display: inline-block;
            background: #D4A574;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            margin-left: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1> 猫咪健康监测系统</h1>
            <nav class="nav">
                <a href="dashboard.html" class="nav-link">返回仪表盘</a>
                <a href="#" class="nav-link" id="logoutBtn">退出登录</a>
            </nav>
        </header>

        <main class="main-content">
            <div class="analysis-container">
                <div class="upload-section">
                    <h2>AI健康分析 <span class="ai-badge">YOLO AI驱动</span></h2>
                    <p>上传猫咪排泄物照片，YOLO AI模型将自动分析健康状况</p>
                    
                    <div class="upload-area" id="uploadArea">
                        <div class="upload-content">
                            <div class="upload-icon">
                                <i class="fas fa-cloud-upload-alt"></i>
                            </div>
                            <div class="upload-text">
                                <h3>点击或拖拽图片到这里</h3>
                                <p>支持 JPG、PNG 格式的图片</p>
                                <p>最大文件大小: 5MB</p>
                                <p class="ai-badge">使用YOLO模型分析5种排泄物类型</p>
                            </div>
                        </div>
                    </div>
                    
                    <input type="file" id="fileInput" class="file-input" accept="image/*">
                    
                    <div class="preview-section" id="previewSection">
                        <img id="imagePreview" class="image-preview" src="" alt="预览图片">
                        <button id="analyzeBtn" class="analyze-btn">
                            <i class="fas fa-robot"></i> 开始YOLO AI分析
                        </button>
                    </div>
                </div>

                <div class="loading" id="loadingSection">
                    <div class="spinner"></div>
                    <p>YOLO AI正在分析图片中，请稍候...</p>
                    <p>正在检测: normal, Lightweight and portable, watery diarrhoea, constipation, parasitic infection</p>
                </div>

                <div class="result-section" id="resultSection">
                    <div class="result-header">
                        <h3>AI分析报告</h3>
                        <span class="health-status" id="healthStatus">分析中</span>
                    </div>
                    
                    <div class="metrics-grid">
                        <div class="metric-card">
                            <div class="metric-label">健康评分</div>
                            <div class="metric-value" id="healthScore">--</div>
                            <div class="metric-label">满分100分</div>
                        </div>
                        <div class="metric-card">
                            <div class="metric-label">AI置信度</div>
                            <div class="metric-value" id="confidence">--%</div>
                            <div class="metric-label">YOLO检测可靠度</div>
                        </div>
                        <div class="metric-card">
                            <div class="metric-label">检测类型</div>
                            <div class="metric-value" id="detectionType">--</div>
                            <div class="metric-label">排泄物分类</div>
                        </div>
                    </div>

                    <div class="detection-info">
                        <h4><i class="fas fa-microscope"></i> 详细检测特征</h4>
                        <div class="features-grid">
                            <div class="feature-card">
                                <div class="feature-label">颜色特征</div>
                                <div class="feature-value" id="colorFeature">--</div>
                            </div>
                            <div class="feature-card">
                                <div class="feature-label">质地特征</div>
                                <div class="feature-value" id="textureFeature">--</div>
                            </div>
                            <div class="feature-card">
                                <div class="feature-label">形状特征</div>
                                <div class="feature-value" id="shapeFeature">--</div>
                            </div>
                            <div class="feature-card">
                                <div class="feature-label">YOLO类别</div>
                                <div class="feature-value" id="yoloClass">--</div>
                            </div>
                        </div>
                    </div>

                    <div class="details-section">
                        <h4>分析详情</h4>
                        <div class="detail-item">
                            <span class="detail-label">分析时间:</span>
                            <span class="detail-value" id="analysisTime">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">风险等级:</span>
                            <span class="detail-value" id="riskLevel">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">AI诊断:</span>
                            <span class="detail-value" id="diagnosis">--</span>
                        </div>
                    </div>

                    <div class="recommendations">
                        <h4><i class="fas fa-lightbulb"></i> AI建议措施</h4>
                        <ul id="recommendationsList">
                            <li>分析完成后显示具体建议</li>
                        </ul>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // DOM元素
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const previewSection = document.getElementById('previewSection');
        const imagePreview = document.getElementById('imagePreview');
        const analyzeBtn = document.getElementById('analyzeBtn');
        const loadingSection = document.getElementById('loadingSection');
        const resultSection = document.getElementById('resultSection');
        
        // 结果元素
        const healthStatus = document.getElementById('healthStatus');
        const healthScore = document.getElementById('healthScore');
        const confidence = document.getElementById('confidence');
        const detectionType = document.getElementById('detectionType');
        const analysisTime = document.getElementById('analysisTime');
        const riskLevel = document.getElementById('riskLevel');
        const diagnosis = document.getElementById('diagnosis');
        const recommendationsList = document.getElementById('recommendationsList');
        const colorFeature = document.getElementById('colorFeature');
        const textureFeature = document.getElementById('textureFeature');
        const shapeFeature = document.getElementById('shapeFeature');
        const yoloClass = document.getElementById('yoloClass');

        // 事件监听器
        uploadArea.addEventListener('click', () => fileInput.click());
        uploadArea.addEventListener('dragover', handleDragOver);
        uploadArea.addEventListener('dragleave', handleDragLeave);
        uploadArea.addEventListener('drop', handleDrop);
        fileInput.addEventListener('change', handleFileSelect);
        analyzeBtn.addEventListener('click', analyzeImage);

        // 拖放功能
        function handleDragOver(e) {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        }

        function handleDragLeave(e) {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
        }

        function handleDrop(e) {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFile(files[0]);
            }
        }

        function handleFileSelect(e) {
            const file = e.target.files[0];
            if (file) {
                handleFile(file);
            }
        }

        function handleFile(file) {
            if (!file.type.startsWith('image/')) {
                alert('请选择图片文件！');
                return;
            }
            
            if (file.size > 5 * 1024 * 1024) {
                alert('图片大小不能超过5MB！');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                imagePreview.src = e.target.result;
                previewSection.style.display = 'block';
                resultSection.style.display = 'none';
            };
            reader.readAsDataURL(file);
        }

        // 分析图片
        async function analyzeImage() {
            if (!fileInput.files[0]) {
                alert('请先选择图片！');
                return;
            }

            analyzeBtn.disabled = true;
            analyzeBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> YOLO分析中...';
            loadingSection.style.display = 'block';

            try {
                const formData = new FormData();
                formData.append('image', fileInput.files[0]);

                const response = await fetch('/api/health/analyze', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    displayAnalysisResult(data.result);
                } else {
                    throw new Error(data.error || '分析失败');
                }

            } catch (error) {
                console.error('Analysis error:', error);
                alert('分析失败: ' + error.message);
            } finally {
                analyzeBtn.disabled = false;
                analyzeBtn.innerHTML = '<i class="fas fa-robot"></i> 开始YOLO AI分析';
                loadingSection.style.display = 'none';
            }
        }

        // 显示分析结果
        function displayAnalysisResult(result) {
            // 更新状态
            healthStatus.textContent = getStatusText(result.health_status);
            healthStatus.className = 'health-status status-' + result.health_status;
            
            // 更新指标
            healthScore.textContent = result.health_score;
            confidence.textContent = result.confidence + '%';
            detectionType.textContent = result.detection_type;
            analysisTime.textContent = new Date(result.timestamp).toLocaleString();
            riskLevel.textContent = getRiskLevelText(result.health_status);
            diagnosis.textContent = result.message || '--';
            
            // 更新特征信息
            if (result.features) {
                colorFeature.textContent = result.features.color || '--';
                textureFeature.textContent = result.features.texture || '--';
                shapeFeature.textContent = result.features.shape || '--';
            }
            
            if (result.details && result.details.detection) {
                yoloClass.textContent = result.details.detection.class_name || '--';
            }

            // 更新建议
            updateRecommendations(result);

            // 显示结果区域
            resultSection.style.display = 'block';
            resultSection.scrollIntoView({ behavior: 'smooth' });
        }

        function getStatusText(status) {
            const statusMap = {
                'healthy': '健康',
                'warning': '需要注意',
                'critical': '需要就医',
                'unknown': '无法确定'
            };
            return statusMap[status] || '未知';
        }

        function getRiskLevelText(status) {
            const riskMap = {
                'healthy': '低风险',
                'warning': '中等风险',
                'critical': '高风险',
                'unknown': '未知风险'
            };
            return riskMap[status] || '未知';
        }

        function updateRecommendations(result) {
            let recommendations = [];
            
            if (result.details && result.details.health_analysis) {
                const recText = result.details.health_analysis.recommendation;
                if (recText) {
                    recommendations = recText.split('。').filter(rec => rec.trim() !== '');
                }
            }

            if (recommendations.length === 0) {
                recommendations = ['请咨询专业兽医获取详细建议'];
            }

            recommendationsList.innerHTML = '';
            recommendations.forEach(rec => {
                const li = document.createElement('li');
                li.textContent = rec.trim();
                recommendationsList.appendChild(li);
            });
        }

        // 退出登录
        document.getElementById('logoutBtn').addEventListener('click', function() {
            localStorage.removeItem('token');
            localStorage.removeItem('user');
            window.location.href = 'index.html';
        });
    </script>
</body>
</html>
